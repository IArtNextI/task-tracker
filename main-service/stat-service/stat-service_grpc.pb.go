// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.23.4
// source: stat-service.proto

package stat_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// StatServiceClient is the client API for StatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StatServiceClient interface {
	GetViewsAndLikes(ctx context.Context, in *GetViewsAndLikesRequest, opts ...grpc.CallOption) (*GetViewsAndLikesResponse, error)
	GetTop5LikedOrViewedTasks(ctx context.Context, in *GetTop5LikedOrViewedTasksRequest, opts ...grpc.CallOption) (*GetTop5LikedOrViewedTasksResponse, error)
	GetTop3LikedUsers(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetTop3LikedUsersResponse, error)
}

type statServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStatServiceClient(cc grpc.ClientConnInterface) StatServiceClient {
	return &statServiceClient{cc}
}

func (c *statServiceClient) GetViewsAndLikes(ctx context.Context, in *GetViewsAndLikesRequest, opts ...grpc.CallOption) (*GetViewsAndLikesResponse, error) {
	out := new(GetViewsAndLikesResponse)
	err := c.cc.Invoke(ctx, "/StatService/GetViewsAndLikes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statServiceClient) GetTop5LikedOrViewedTasks(ctx context.Context, in *GetTop5LikedOrViewedTasksRequest, opts ...grpc.CallOption) (*GetTop5LikedOrViewedTasksResponse, error) {
	out := new(GetTop5LikedOrViewedTasksResponse)
	err := c.cc.Invoke(ctx, "/StatService/GetTop5LikedOrViewedTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statServiceClient) GetTop3LikedUsers(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetTop3LikedUsersResponse, error) {
	out := new(GetTop3LikedUsersResponse)
	err := c.cc.Invoke(ctx, "/StatService/GetTop3LikedUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatServiceServer is the server API for StatService service.
// All implementations must embed UnimplementedStatServiceServer
// for forward compatibility
type StatServiceServer interface {
	GetViewsAndLikes(context.Context, *GetViewsAndLikesRequest) (*GetViewsAndLikesResponse, error)
	GetTop5LikedOrViewedTasks(context.Context, *GetTop5LikedOrViewedTasksRequest) (*GetTop5LikedOrViewedTasksResponse, error)
	GetTop3LikedUsers(context.Context, *emptypb.Empty) (*GetTop3LikedUsersResponse, error)
	mustEmbedUnimplementedStatServiceServer()
}

// UnimplementedStatServiceServer must be embedded to have forward compatible implementations.
type UnimplementedStatServiceServer struct {
}

func (UnimplementedStatServiceServer) GetViewsAndLikes(context.Context, *GetViewsAndLikesRequest) (*GetViewsAndLikesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetViewsAndLikes not implemented")
}
func (UnimplementedStatServiceServer) GetTop5LikedOrViewedTasks(context.Context, *GetTop5LikedOrViewedTasksRequest) (*GetTop5LikedOrViewedTasksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTop5LikedOrViewedTasks not implemented")
}
func (UnimplementedStatServiceServer) GetTop3LikedUsers(context.Context, *emptypb.Empty) (*GetTop3LikedUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTop3LikedUsers not implemented")
}
func (UnimplementedStatServiceServer) mustEmbedUnimplementedStatServiceServer() {}

// UnsafeStatServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StatServiceServer will
// result in compilation errors.
type UnsafeStatServiceServer interface {
	mustEmbedUnimplementedStatServiceServer()
}

func RegisterStatServiceServer(s grpc.ServiceRegistrar, srv StatServiceServer) {
	s.RegisterService(&StatService_ServiceDesc, srv)
}

func _StatService_GetViewsAndLikes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetViewsAndLikesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatServiceServer).GetViewsAndLikes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StatService/GetViewsAndLikes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatServiceServer).GetViewsAndLikes(ctx, req.(*GetViewsAndLikesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatService_GetTop5LikedOrViewedTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTop5LikedOrViewedTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatServiceServer).GetTop5LikedOrViewedTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StatService/GetTop5LikedOrViewedTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatServiceServer).GetTop5LikedOrViewedTasks(ctx, req.(*GetTop5LikedOrViewedTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatService_GetTop3LikedUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatServiceServer).GetTop3LikedUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StatService/GetTop3LikedUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatServiceServer).GetTop3LikedUsers(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// StatService_ServiceDesc is the grpc.ServiceDesc for StatService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StatService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "StatService",
	HandlerType: (*StatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetViewsAndLikes",
			Handler:    _StatService_GetViewsAndLikes_Handler,
		},
		{
			MethodName: "GetTop5LikedOrViewedTasks",
			Handler:    _StatService_GetTop5LikedOrViewedTasks_Handler,
		},
		{
			MethodName: "GetTop3LikedUsers",
			Handler:    _StatService_GetTop3LikedUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stat-service.proto",
}
